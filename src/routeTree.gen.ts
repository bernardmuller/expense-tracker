/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { createServerRootRoute } from '@tanstack/react-start/server'

import { Route as rootRouteImport } from './routes/__root'
import { Route as AuthRouteImport } from './routes/auth'
import { Route as AuthenticatedRouteImport } from './routes/_authenticated'
import { Route as AuthenticatedIndexRouteImport } from './routes/_authenticated/index'
import { Route as AuthenticatedSettingsRouteImport } from './routes/_authenticated/settings'
import { Route as AuthenticatedExpensesRouteImport } from './routes/_authenticated/expenses'
import { Route as AuthenticatedCategoriesRouteImport } from './routes/_authenticated/categories'
import { Route as AuthenticatedBudgetBudgetIdRouteImport } from './routes/_authenticated/budget/$budgetId'
import { Route as AuthenticatedBudgetCreateInfoRouteImport } from './routes/_authenticated/budget/create/info'
import { Route as AuthenticatedBudgetCreateCategoriesRouteImport } from './routes/_authenticated/budget/create/categories'
import { ServerRoute as ApiAuthSplatServerRouteImport } from './routes/api/auth/$'

const rootServerRouteImport = createServerRootRoute()

const AuthRoute = AuthRouteImport.update({
  id: '/auth',
  path: '/auth',
  getParentRoute: () => rootRouteImport,
} as any)
const AuthenticatedRoute = AuthenticatedRouteImport.update({
  id: '/_authenticated',
  getParentRoute: () => rootRouteImport,
} as any)
const AuthenticatedIndexRoute = AuthenticatedIndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => AuthenticatedRoute,
} as any)
const AuthenticatedSettingsRoute = AuthenticatedSettingsRouteImport.update({
  id: '/settings',
  path: '/settings',
  getParentRoute: () => AuthenticatedRoute,
} as any)
const AuthenticatedExpensesRoute = AuthenticatedExpensesRouteImport.update({
  id: '/expenses',
  path: '/expenses',
  getParentRoute: () => AuthenticatedRoute,
} as any)
const AuthenticatedCategoriesRoute = AuthenticatedCategoriesRouteImport.update({
  id: '/categories',
  path: '/categories',
  getParentRoute: () => AuthenticatedRoute,
} as any)
const AuthenticatedBudgetBudgetIdRoute =
  AuthenticatedBudgetBudgetIdRouteImport.update({
    id: '/budget/$budgetId',
    path: '/budget/$budgetId',
    getParentRoute: () => AuthenticatedRoute,
  } as any)
const AuthenticatedBudgetCreateInfoRoute =
  AuthenticatedBudgetCreateInfoRouteImport.update({
    id: '/budget/create/info',
    path: '/budget/create/info',
    getParentRoute: () => AuthenticatedRoute,
  } as any)
const AuthenticatedBudgetCreateCategoriesRoute =
  AuthenticatedBudgetCreateCategoriesRouteImport.update({
    id: '/budget/create/categories',
    path: '/budget/create/categories',
    getParentRoute: () => AuthenticatedRoute,
  } as any)
const ApiAuthSplatServerRoute = ApiAuthSplatServerRouteImport.update({
  id: '/api/auth/$',
  path: '/api/auth/$',
  getParentRoute: () => rootServerRouteImport,
} as any)

export interface FileRoutesByFullPath {
  '/auth': typeof AuthRoute
  '/categories': typeof AuthenticatedCategoriesRoute
  '/expenses': typeof AuthenticatedExpensesRoute
  '/settings': typeof AuthenticatedSettingsRoute
  '/': typeof AuthenticatedIndexRoute
  '/budget/$budgetId': typeof AuthenticatedBudgetBudgetIdRoute
  '/budget/create/categories': typeof AuthenticatedBudgetCreateCategoriesRoute
  '/budget/create/info': typeof AuthenticatedBudgetCreateInfoRoute
}
export interface FileRoutesByTo {
  '/auth': typeof AuthRoute
  '/categories': typeof AuthenticatedCategoriesRoute
  '/expenses': typeof AuthenticatedExpensesRoute
  '/settings': typeof AuthenticatedSettingsRoute
  '/': typeof AuthenticatedIndexRoute
  '/budget/$budgetId': typeof AuthenticatedBudgetBudgetIdRoute
  '/budget/create/categories': typeof AuthenticatedBudgetCreateCategoriesRoute
  '/budget/create/info': typeof AuthenticatedBudgetCreateInfoRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/_authenticated': typeof AuthenticatedRouteWithChildren
  '/auth': typeof AuthRoute
  '/_authenticated/categories': typeof AuthenticatedCategoriesRoute
  '/_authenticated/expenses': typeof AuthenticatedExpensesRoute
  '/_authenticated/settings': typeof AuthenticatedSettingsRoute
  '/_authenticated/': typeof AuthenticatedIndexRoute
  '/_authenticated/budget/$budgetId': typeof AuthenticatedBudgetBudgetIdRoute
  '/_authenticated/budget/create/categories': typeof AuthenticatedBudgetCreateCategoriesRoute
  '/_authenticated/budget/create/info': typeof AuthenticatedBudgetCreateInfoRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/auth'
    | '/categories'
    | '/expenses'
    | '/settings'
    | '/'
    | '/budget/$budgetId'
    | '/budget/create/categories'
    | '/budget/create/info'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/auth'
    | '/categories'
    | '/expenses'
    | '/settings'
    | '/'
    | '/budget/$budgetId'
    | '/budget/create/categories'
    | '/budget/create/info'
  id:
    | '__root__'
    | '/_authenticated'
    | '/auth'
    | '/_authenticated/categories'
    | '/_authenticated/expenses'
    | '/_authenticated/settings'
    | '/_authenticated/'
    | '/_authenticated/budget/$budgetId'
    | '/_authenticated/budget/create/categories'
    | '/_authenticated/budget/create/info'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  AuthenticatedRoute: typeof AuthenticatedRouteWithChildren
  AuthRoute: typeof AuthRoute
}
export interface FileServerRoutesByFullPath {
  '/api/auth/$': typeof ApiAuthSplatServerRoute
}
export interface FileServerRoutesByTo {
  '/api/auth/$': typeof ApiAuthSplatServerRoute
}
export interface FileServerRoutesById {
  __root__: typeof rootServerRouteImport
  '/api/auth/$': typeof ApiAuthSplatServerRoute
}
export interface FileServerRouteTypes {
  fileServerRoutesByFullPath: FileServerRoutesByFullPath
  fullPaths: '/api/auth/$'
  fileServerRoutesByTo: FileServerRoutesByTo
  to: '/api/auth/$'
  id: '__root__' | '/api/auth/$'
  fileServerRoutesById: FileServerRoutesById
}
export interface RootServerRouteChildren {
  ApiAuthSplatServerRoute: typeof ApiAuthSplatServerRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/auth': {
      id: '/auth'
      path: '/auth'
      fullPath: '/auth'
      preLoaderRoute: typeof AuthRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_authenticated': {
      id: '/_authenticated'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof AuthenticatedRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_authenticated/': {
      id: '/_authenticated/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof AuthenticatedIndexRouteImport
      parentRoute: typeof AuthenticatedRoute
    }
    '/_authenticated/settings': {
      id: '/_authenticated/settings'
      path: '/settings'
      fullPath: '/settings'
      preLoaderRoute: typeof AuthenticatedSettingsRouteImport
      parentRoute: typeof AuthenticatedRoute
    }
    '/_authenticated/expenses': {
      id: '/_authenticated/expenses'
      path: '/expenses'
      fullPath: '/expenses'
      preLoaderRoute: typeof AuthenticatedExpensesRouteImport
      parentRoute: typeof AuthenticatedRoute
    }
    '/_authenticated/categories': {
      id: '/_authenticated/categories'
      path: '/categories'
      fullPath: '/categories'
      preLoaderRoute: typeof AuthenticatedCategoriesRouteImport
      parentRoute: typeof AuthenticatedRoute
    }
    '/_authenticated/budget/$budgetId': {
      id: '/_authenticated/budget/$budgetId'
      path: '/budget/$budgetId'
      fullPath: '/budget/$budgetId'
      preLoaderRoute: typeof AuthenticatedBudgetBudgetIdRouteImport
      parentRoute: typeof AuthenticatedRoute
    }
    '/_authenticated/budget/create/info': {
      id: '/_authenticated/budget/create/info'
      path: '/budget/create/info'
      fullPath: '/budget/create/info'
      preLoaderRoute: typeof AuthenticatedBudgetCreateInfoRouteImport
      parentRoute: typeof AuthenticatedRoute
    }
    '/_authenticated/budget/create/categories': {
      id: '/_authenticated/budget/create/categories'
      path: '/budget/create/categories'
      fullPath: '/budget/create/categories'
      preLoaderRoute: typeof AuthenticatedBudgetCreateCategoriesRouteImport
      parentRoute: typeof AuthenticatedRoute
    }
  }
}
declare module '@tanstack/react-start/server' {
  interface ServerFileRoutesByPath {
    '/api/auth/$': {
      id: '/api/auth/$'
      path: '/api/auth/$'
      fullPath: '/api/auth/$'
      preLoaderRoute: typeof ApiAuthSplatServerRouteImport
      parentRoute: typeof rootServerRouteImport
    }
  }
}

interface AuthenticatedRouteChildren {
  AuthenticatedCategoriesRoute: typeof AuthenticatedCategoriesRoute
  AuthenticatedExpensesRoute: typeof AuthenticatedExpensesRoute
  AuthenticatedSettingsRoute: typeof AuthenticatedSettingsRoute
  AuthenticatedIndexRoute: typeof AuthenticatedIndexRoute
  AuthenticatedBudgetBudgetIdRoute: typeof AuthenticatedBudgetBudgetIdRoute
  AuthenticatedBudgetCreateCategoriesRoute: typeof AuthenticatedBudgetCreateCategoriesRoute
  AuthenticatedBudgetCreateInfoRoute: typeof AuthenticatedBudgetCreateInfoRoute
}

const AuthenticatedRouteChildren: AuthenticatedRouteChildren = {
  AuthenticatedCategoriesRoute: AuthenticatedCategoriesRoute,
  AuthenticatedExpensesRoute: AuthenticatedExpensesRoute,
  AuthenticatedSettingsRoute: AuthenticatedSettingsRoute,
  AuthenticatedIndexRoute: AuthenticatedIndexRoute,
  AuthenticatedBudgetBudgetIdRoute: AuthenticatedBudgetBudgetIdRoute,
  AuthenticatedBudgetCreateCategoriesRoute:
    AuthenticatedBudgetCreateCategoriesRoute,
  AuthenticatedBudgetCreateInfoRoute: AuthenticatedBudgetCreateInfoRoute,
}

const AuthenticatedRouteWithChildren = AuthenticatedRoute._addFileChildren(
  AuthenticatedRouteChildren,
)

const rootRouteChildren: RootRouteChildren = {
  AuthenticatedRoute: AuthenticatedRouteWithChildren,
  AuthRoute: AuthRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
const rootServerRouteChildren: RootServerRouteChildren = {
  ApiAuthSplatServerRoute: ApiAuthSplatServerRoute,
}
export const serverRouteTree = rootServerRouteImport
  ._addFileChildren(rootServerRouteChildren)
  ._addFileTypes<FileServerRouteTypes>()
